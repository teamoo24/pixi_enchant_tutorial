{"version":3,"file":"object.js","sourceRoot":"","sources":["../../../../src/lib/models/types/object.ts"],"names":[],"mappings":";;AAAA,yCAAiC;AAEjC,IAAY,mBAGX;AAHD,WAAY,mBAAmB;IAC3B,qEAAiB,CAAA;IACjB,qEAAiB,CAAA;AACrB,CAAC,EAHW,mBAAmB,GAAnB,2BAAmB,KAAnB,2BAAmB,QAG9B;AAeD,MAAa,UAAW,SAAQ,eAAI;IAShC,YACI,UAA4B;QAE5B,KAAK,EAAE,CAAC;QAXH,SAAI,GAAG,QAAQ,CAAC;QAYrB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;IAED,KAAK;QACD,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;IAC1C,CAAC;IAED,MAAM,CAAC,IAAa;QAChB,IAAI,CAAC,CAAC,IAAI,YAAY,UAAU,CAAC,EAAE;YAC/B,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AA1BD,gCA0BC","sourcesContent":["import { Type } from './abstract'\n\nexport enum ObjectPropertyFlags {\n    Readonly = 1 << 0,\n    Optional = 1 << 1\n}\n\nexport interface ObjectProperty {\n    name: string\n    type: Type\n    flags: ObjectPropertyFlags\n}\n\nexport interface Signature {\n    parameters: Parameter[]\n    typeParameters: TypeParameter[]\n    returnType: Type\n\n}\n\nexport class ObjectType extends Type {\n    readonly type = 'object';\n\n    properties: ObjectProperty[];\n    signatures: Signature[];\n    constructSignatures: Signature[];\n    stringIndexSignature?: Type;\n    numberIndexSignature?: Type;\n\n    constructor(\n        properties: ObjectProperty[],\n    ) {\n        super();\n        this.properties = properties;\n    }\n\n    clone() {\n        return new ObjectType(this.properties)\n    }\n\n    equals(type: unknown) {\n        if (!(type instanceof ObjectType)) {\n            return false;\n        }\n        return true;\n    }\n}\n"]}